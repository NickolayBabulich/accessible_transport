services:
  postgresql:
    image: postgres:alpine
    container_name: accessible_postgresql
    env_file:
      - backend/.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./.temp:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: accessible_backend
    tty: true
    command: >
      sh -c "poetry run python manage.py makemigrations && 
             poetry run python manage.py migrate &&
             poetry run python manage.py loaddata tmp/allbase.json &&
             poetry run python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    env_file:
      - backend/.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./backend:/app
    depends_on:
      postgresql:
        condition: service_healthy

networks:
  default:
    name: postgresql-net
    driver: bridge
